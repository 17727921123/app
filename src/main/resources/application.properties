server.port=8763
spring.application.name=app-server
eureka.client.serviceUrl.defaultZone=http://eureka1:8761/eureka/,http://eureka2:8762/eureka/
eureka.instance.leaseRenewalIntervalInSeconds=10
eureka.instance.health-check-url-path=/actuator/health
eureka.client.registryFetchIntervalSeconds=5
#eureka.client.healthcheck.enabled=true
#eureka.instance.lease-renewal-interval-in-seconds=3
#eureka.instance.lease-expiration-duration-in-seconds=7
feign.hystrix.enabled=true
#Redis
#spring.redis.host=127.0.0.1
redis.host=127.0.0.1
#Redis服务器连接端口
redis.port=6379
#连接超时时间（毫秒）
redis.timeout=3
#Redis服务器连接密码（默认为空）
#没有密码可以不配
#redis.password=123456
#连接池中的最大连接数
redis.poolMaxTotal=10
#连接池中的最大空闲连接
redis.poolMaxIdle=10
#连接池最大阻塞等待时间（使用负值表示没有限制）
redis.poolMaxWait=3
#mongodb
#spring.data.mongodb.uri=mongodb://root:root@localhost:27017/test
spring.data.mongodb.uri=mongodb://localhost:27111/lsm
#memcache
memcache.servers=127.0.0.1:11211
memcache.failover=true
memcache.initConn=10
memcache.minConn=20
memcache.maxConn=1000
memcache.maintSleep=50
memcache.nagle=false
memcache.socketTO=3000
memcache.aliveCheck=true
#kafka
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=localhost:9092
# 指定默认消费者group id
spring.kafka.consumer.group-id=myGroup
# 指定默认topic id
spring.kafka.template.default-topic=my-replicated-topic
# 指定listener 容器中的线程数，用于提高并发量
spring.kafka.listener.concurrency=3
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=1000
#key-value序列化反序列化
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.buffer-memory=524288
#SpringBootAdmin配置
spring.security.user.name=admin
spring.security.user.password=admin
#配置日志的存放路径，此处用于SpringBootAdmin的日志监控
logging.path=logs/log
#暴露actuator的所有端点
management.endpoints.web.exposure.include=*
#health endpoint是否必须显示全部细节。默认情况下,/actuator/health 是公开的,并且不显示细节
management.endpoint.health.show-details=ALWAYS
#SpringBootAdmin只要其中一个监控内容为DOWN,则该节点的总体状态就为DOWN
#SpringBootAdmin默认会执行Redis的健康检查,只要被监控的服务有在pom.xml引入redis的jar包,
#但是又没有开启redis的服务,就会出现Redis连接失败,可以手动关闭对Redis的健康检查
management.health.redis.enabled=false
spring.boot.admin.client.url=http://localhost:8767
#邮件
#spring.boot.admin.notify.mail.to=1931931123@qq.com
#spring.boot.admin.notify.mail.from=1931931123@qq.com
#spring.mail.host=smtp.qq.com
#spring.mail.username=1931931123@qq.com
#spring.mail.password=qijfgccpuelzfcef
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true
#mybatis
mybatis.typeAliasesPackage=com.lsm.common.entity.app
#mybatis.mapperLocations=classpath:mapper/*.xml
#classpath表示当前工程路径,classpath*表示包含当前工程和jar包下路径
mybatis.mapperLocations=classpath*:mapper/*.xml
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
#配置mybatis查询返回类型是Map时,若值为NULL也依旧返回
mybatis.configuration.call-setters-on-nulls=true
#db
spring.datasource.url=jdbc:mysql://localhost:3306/test?characterEncoding=utf-8&useSSL=false&useUnicode=true&serverTimezone=GMT&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#Mybatis-PageHelper分页插件
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql